Search.setIndex({"alltitles": {"ACTL documentation": [[23, "actl-documentation"]], "AC_NO_UNIQUE_ADDRESS": [[10, "ac-no-unique-address"]], "Character classification": [[19, "character-classification"]], "Comparison concepts": [[12, "comparison-concepts"]], "Compiler detection": [[16, "compiler-detection"]], "Concepts": [[12, "concepts"]], "Contents": [[23, "contents"]], "Contributing": [[23, "contributing"]], "Core language concepts": [[12, "core-language-concepts"]], "Design": [[4, "design"], [5, "design"], [7, "design"], [14, "design"], [23, "design"]], "Detection traits": [[5, "detection-traits"]], "Difference between out and inout parameters": [[5, "difference-between-out-and-inout-parameters"]], "Doxygen": [[22, "doxygen"]], "Functional traits": [[7, "functional-traits"]], "Inlining": [[1, "inlining"]], "Lazy evaluation": [[2, "lazy-evaluation"]], "Name and signature": [[3, "name-and-signature"]], "Object concepts": [[12, "object-concepts"]], "Publishing documentation": [[22, "publishing-documentation"]], "Qualified free functions": [[7, "qualified-free-functions"]], "Reference": [[1, "reference"], [2, "reference"], [3, "reference"], [4, "reference"], [5, "reference"], [6, "reference"], [7, "reference"], [8, "reference"], [10, "reference"], [12, "reference"], [13, "reference"], [14, "reference"], [16, "reference"], [19, "reference"]], "Running tests": [[20, "running-tests"]], "Sphinx": [[22, "sphinx"]], "Tuple invocation": [[8, "tuple-invocation"]], "Writing code": [[21, "writing-code"]], "Writing documentation": [[22, "writing-documentation"]], "constant": [[13, "constant"]], "constant_literals": [[14, "constant-literals"]], "functional": [[0, "functional"]], "memory": [[9, "memory"]], "meta": [[11, "meta"]], "noexcept specifier": [[4, "noexcept-specifier"]], "out/inout parameters": [[5, "out-inout-parameters"]], "overloaded": [[6, "overloaded"]], "platform": [[15, "platform"]], "preprocessor": [[17, "preprocessor"]], "string": [[18, "string"]]}, "docnames": ["actl/functional", "actl/functional/inlining", "actl/functional/lazy", "actl/functional/name", "actl/functional/noexcept", "actl/functional/out_inout", "actl/functional/overloaded", "actl/functional/traits", "actl/functional/tuple", "actl/memory", "actl/memory/no_unique_address", "actl/meta", "actl/meta/concepts", "actl/meta/constant", "actl/meta/constant_literals", "actl/platform", "actl/platform/compiler", "actl/preprocessor", "actl/string", "actl/string/char_classes", "contributing/Running tests", "contributing/Writing code", "contributing/Writing documentation", "index"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["actl/functional.rst", "actl/functional/inlining.rst", "actl/functional/lazy.rst", "actl/functional/name.rst", "actl/functional/noexcept.rst", "actl/functional/out_inout.rst", "actl/functional/overloaded.rst", "actl/functional/traits.rst", "actl/functional/tuple.rst", "actl/memory.rst", "actl/memory/no_unique_address.rst", "actl/meta.rst", "actl/meta/concepts.rst", "actl/meta/constant.rst", "actl/meta/constant_literals.rst", "actl/platform.rst", "actl/platform/compiler.rst", "actl/preprocessor.rst", "actl/string.rst", "actl/string/char_classes.rst", "contributing/Running tests.rst", "contributing/Writing code.rst", "contributing/Writing documentation.rst", "index.rst"], "indexentries": {"ac (c++ type)": [[19, "_CPPv42ac", false]], "ac::accepts_variadic_arguments_v (c++ member)": [[7, "_CPPv4I0EN2ac28accepts_variadic_arguments_vE", false]], "ac::arity_v (c++ member)": [[7, "_CPPv4I0EN2ac7arity_vE", false]], "ac::bool_c (c++ member)": [[13, "_CPPv4I_bEN2ac6bool_cE", false]], "ac::bool_constant (c++ type)": [[13, "_CPPv4I_bEN2ac13bool_constantE", false]], "ac::constant (c++ struct)": [[13, "_CPPv4I_DaEN2ac8constantE", false]], "ac::constant_literals (c++ type)": [[14, "_CPPv4N2ac17constant_literalsE", false]], "ac::constant_literals::operator\"\"_c (c++ function)": [[14, "_CPPv4I_DpcEN2ac17constant_literalsli2_cEDav", false]], "ac::constant_literals::operator\"\"_cll (c++ function)": [[14, "_CPPv4I_DpcEN2ac17constant_literalsli4_cllEDav", false]], "ac::constant_literals::operator\"\"_cu (c++ function)": [[14, "_CPPv4I_DpcEN2ac17constant_literalsli3_cuEDav", false]], "ac::constant_literals::operator\"\"_cull (c++ function)": [[14, "_CPPv4I_DpcEN2ac17constant_literalsli5_cullEDav", false]], "ac::freefunction (c++ concept)": [[7, "_CPPv4I0EN2ac12FreeFunctionE", false]], "ac::functionobject (c++ concept)": [[7, "_CPPv4I0EN2ac14FunctionObjectE", false]], "ac::inout (c++ class)": [[5, "_CPPv4I0EN2ac5inoutE", false]], "ac::int_c (c++ member)": [[13, "_CPPv4I_iEN2ac5int_cE", false]], "ac::int_constant (c++ type)": [[13, "_CPPv4I_iEN2ac12int_constantE", false]], "ac::invoke_all_matching (c++ function)": [[8, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", false]], "ac::invoke_first_matching (c++ function)": [[8, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", false]], "ac::is_alpha (c++ function)": [[19, "_CPPv4N2ac8is_alphaEc", false]], "ac::is_alphanumeric (c++ function)": [[19, "_CPPv4N2ac15is_alphanumericEc", false]], "ac::is_constant (c++ struct)": [[13, "_CPPv4I0EN2ac11is_constantE", false]], "ac::is_constant_v (c++ member)": [[13, "_CPPv4I0EN2ac13is_constant_vE", false]], "ac::is_digit (c++ function)": [[19, "_CPPv4N2ac8is_digitEc", false]], "ac::is_inout_v (c++ member)": [[5, "_CPPv4I0EN2ac10is_inout_vE", false]], "ac::is_lower (c++ function)": [[19, "_CPPv4N2ac8is_lowerEc", false]], "ac::is_noexcept_v (c++ member)": [[7, "_CPPv4I0EN2ac13is_noexcept_vE", false]], "ac::is_out_v (c++ member)": [[5, "_CPPv4I0EN2ac8is_out_vE", false]], "ac::is_space (c++ function)": [[19, "_CPPv4N2ac8is_spaceEc", false]], "ac::is_upper (c++ function)": [[19, "_CPPv4N2ac8is_upperEc", false]], "ac::lazy (c++ struct)": [[2, "_CPPv4I_NSt9invocableEEN2ac4lazyE", false]], "ac::lazy::operator std::invoke_result_t<function> (c++ function)": [[2, "_CPPv4N2ac4lazycvNSt15invoke_result_tI8FunctionEEEv", false]], "ac::maythrowconvertibleto (c++ concept)": [[12, "_CPPv4I00EN2ac21MayThrowConvertibleToE", false]], "ac::maythrowcopyable (c++ concept)": [[12, "_CPPv4I0EN2ac16MayThrowCopyableE", false]], "ac::maythrowcopyconstructible (c++ concept)": [[12, "_CPPv4I0EN2ac25MayThrowCopyConstructibleE", false]], "ac::memberfunction (c++ concept)": [[7, "_CPPv4I0EN2ac14MemberFunctionE", false]], "ac::nothrowassignablefrom (c++ concept)": [[12, "_CPPv4I00EN2ac21NothrowAssignableFromE", false]], "ac::nothrowconstructiblefrom (c++ concept)": [[12, "_CPPv4I0DpEN2ac24NothrowConstructibleFromE", false]], "ac::nothrowconvertibleto (c++ concept)": [[12, "_CPPv4I00EN2ac20NothrowConvertibleToE", false]], "ac::nothrowcopyable (c++ concept)": [[12, "_CPPv4I0EN2ac15NothrowCopyableE", false]], "ac::nothrowcopyconstructible (c++ concept)": [[12, "_CPPv4I0EN2ac24NothrowCopyConstructibleE", false]], "ac::nothrowdefaultinitializable (c++ concept)": [[12, "_CPPv4I0EN2ac27NothrowDefaultInitializableE", false]], "ac::nothrowequalitycomparable (c++ concept)": [[12, "_CPPv4I0EN2ac25NothrowEqualityComparableE", false]], "ac::nothrowexplicitlyconvertibleto (c++ concept)": [[12, "_CPPv4I00EN2ac30NothrowExplicitlyConvertibleToE", false]], "ac::nothrowmovable (c++ concept)": [[12, "_CPPv4I0EN2ac14NothrowMovableE", false]], "ac::nothrowmoveconstructible (c++ concept)": [[12, "_CPPv4I0EN2ac24NothrowMoveConstructibleE", false]], "ac::nothrowregular (c++ concept)": [[12, "_CPPv4I0EN2ac14NothrowRegularE", false]], "ac::nothrowsemiregular (c++ concept)": [[12, "_CPPv4I0EN2ac18NothrowSemiregularE", false]], "ac::nothrowswappable (c++ concept)": [[12, "_CPPv4I0EN2ac16NothrowSwappableE", false]], "ac::nothrowswappablewith (c++ concept)": [[12, "_CPPv4I00EN2ac20NothrowSwappableWithE", false]], "ac::out (c++ class)": [[5, "_CPPv4I0EN2ac3outE", false]], "ac::out::operator t (c++ function)": [[5, "_CPPv4NK2ac3outcv1TEv", false]], "ac::out::operator* (c++ function)": [[5, "_CPPv4NK2ac3outmlEv", false]], "ac::out::operator-> (c++ function)": [[5, "_CPPv4N2ac3outptEv", false]], "ac::out::operator= (c++ function)": [[5, "_CPPv4I0EN2ac3outaSER3outRR3Src", false]], "ac::out::out (c++ function)": [[5, "_CPPv4I0EN2ac3out3outERR3Arg", false], [5, "_CPPv4I0EN2ac3out3outERR3outI1UE", false]], "ac::overloaded (c++ struct)": [[6, "_CPPv4IDpEN2ac10overloadedE", false]], "ac::parameter_at_t (c++ type)": [[7, "_CPPv4I_6size_t0EN2ac14parameter_at_tE", false]], "ac::return_t (c++ type)": [[7, "_CPPv4I0EN2ac8return_tE", false]], "ac::size_c (c++ member)": [[13, "_CPPv4I_6size_tEN2ac6size_cE", false]], "ac::size_constant (c++ type)": [[13, "_CPPv4I_6size_tEN2ac13size_constantE", false]], "ac::triviallyassignablefrom (c++ concept)": [[12, "_CPPv4I00EN2ac23TriviallyAssignableFromE", false]], "ac::triviallyconstructiblefrom (c++ concept)": [[12, "_CPPv4I0DpEN2ac26TriviallyConstructibleFromE", false]], "ac::triviallycopyable (c++ concept)": [[12, "_CPPv4I0EN2ac17TriviallyCopyableE", false]], "ac::triviallycopyconstructible (c++ concept)": [[12, "_CPPv4I0EN2ac26TriviallyCopyConstructibleE", false]], "ac::triviallydefaultinitializable (c++ concept)": [[12, "_CPPv4I0EN2ac29TriviallyDefaultInitializableE", false]], "ac::triviallymovable (c++ concept)": [[12, "_CPPv4I0EN2ac16TriviallyMovableE", false]], "ac::triviallymoveconstructible (c++ concept)": [[12, "_CPPv4I0EN2ac26TriviallyMoveConstructibleE", false]], "ac::triviallysemiregular (c++ concept)": [[12, "_CPPv4I0EN2ac20TriviallySemiregularE", false]], "ac_always_inline (c macro)": [[1, "c.AC_ALWAYS_INLINE", false]], "ac_compiler_clang (c macro)": [[16, "c.AC_COMPILER_CLANG", false]], "ac_compiler_gcc (c macro)": [[16, "c.AC_COMPILER_GCC", false]], "ac_compiler_gcc_compatible (c macro)": [[16, "c.AC_COMPILER_GCC_COMPATIBLE", false]], "ac_compiler_msvc (c macro)": [[16, "c.AC_COMPILER_MSVC", false]], "ac_concat (c macro)": [[17, "c.AC_CONCAT", false]], "ac_deduce_noexcept_and_initialize (c macro)": [[4, "c.AC_DEDUCE_NOEXCEPT_AND_INITIALIZE", false]], "ac_deduce_noexcept_and_return (c macro)": [[4, "c.AC_DEDUCE_NOEXCEPT_AND_RETURN", false]], "ac_deduce_noexcept_decltype_and_return (c macro)": [[4, "c.AC_DEDUCE_NOEXCEPT_DECLTYPE_AND_RETURN", false]], "ac_deduce_noexcept_requires_and_return (c macro)": [[4, "c.AC_DEDUCE_NOEXCEPT_REQUIRES_AND_RETURN", false]], "ac_function_name (c macro)": [[3, "c.AC_FUNCTION_NAME", false]], "ac_function_signature (c macro)": [[3, "c.AC_FUNCTION_SIGNATURE", false]], "ac_never_inline (c macro)": [[1, "c.AC_NEVER_INLINE", false]], "ac_no_unique_address (c macro)": [[10, "c.AC_NO_UNIQUE_ADDRESS", false]], "ac_unparenthesized (c macro)": [[17, "c.AC_UNPARENTHESIZED", false]]}, "objects": {"": [[1, 0, 1, "c.AC_ALWAYS_INLINE", "AC_ALWAYS_INLINE"], [16, 0, 1, "c.AC_COMPILER_CLANG", "AC_COMPILER_CLANG"], [16, 0, 1, "c.AC_COMPILER_GCC", "AC_COMPILER_GCC"], [16, 0, 1, "c.AC_COMPILER_GCC_COMPATIBLE", "AC_COMPILER_GCC_COMPATIBLE"], [16, 0, 1, "c.AC_COMPILER_MSVC", "AC_COMPILER_MSVC"], [17, 0, 1, "c.AC_CONCAT", "AC_CONCAT"], [4, 0, 1, "c.AC_DEDUCE_NOEXCEPT_AND_INITIALIZE", "AC_DEDUCE_NOEXCEPT_AND_INITIALIZE"], [4, 0, 1, "c.AC_DEDUCE_NOEXCEPT_AND_RETURN", "AC_DEDUCE_NOEXCEPT_AND_RETURN"], [4, 0, 1, "c.AC_DEDUCE_NOEXCEPT_DECLTYPE_AND_RETURN", "AC_DEDUCE_NOEXCEPT_DECLTYPE_AND_RETURN"], [4, 0, 1, "c.AC_DEDUCE_NOEXCEPT_REQUIRES_AND_RETURN", "AC_DEDUCE_NOEXCEPT_REQUIRES_AND_RETURN"], [3, 0, 1, "c.AC_FUNCTION_NAME", "AC_FUNCTION_NAME"], [3, 0, 1, "c.AC_FUNCTION_SIGNATURE", "AC_FUNCTION_SIGNATURE"], [1, 0, 1, "c.AC_NEVER_INLINE", "AC_NEVER_INLINE"], [10, 0, 1, "c.AC_NO_UNIQUE_ADDRESS", "AC_NO_UNIQUE_ADDRESS"], [17, 0, 1, "c.AC_UNPARENTHESIZED", "AC_UNPARENTHESIZED"], [19, 1, 1, "_CPPv42ac", "ac"], [7, 2, 1, "_CPPv4I0EN2ac12FreeFunctionE", "ac::FreeFunction"], [7, 3, 1, "_CPPv4I0EN2ac12FreeFunctionE", "ac::FreeFunction::T"], [7, 2, 1, "_CPPv4I0EN2ac14FunctionObjectE", "ac::FunctionObject"], [7, 3, 1, "_CPPv4I0EN2ac14FunctionObjectE", "ac::FunctionObject::T"], [12, 2, 1, "_CPPv4I00EN2ac21MayThrowConvertibleToE", "ac::MayThrowConvertibleTo"], [12, 3, 1, "_CPPv4I00EN2ac21MayThrowConvertibleToE", "ac::MayThrowConvertibleTo::From"], [12, 3, 1, "_CPPv4I00EN2ac21MayThrowConvertibleToE", "ac::MayThrowConvertibleTo::To"], [12, 2, 1, "_CPPv4I0EN2ac25MayThrowCopyConstructibleE", "ac::MayThrowCopyConstructible"], [12, 3, 1, "_CPPv4I0EN2ac25MayThrowCopyConstructibleE", "ac::MayThrowCopyConstructible::T"], [12, 2, 1, "_CPPv4I0EN2ac16MayThrowCopyableE", "ac::MayThrowCopyable"], [12, 3, 1, "_CPPv4I0EN2ac16MayThrowCopyableE", "ac::MayThrowCopyable::T"], [7, 2, 1, "_CPPv4I0EN2ac14MemberFunctionE", "ac::MemberFunction"], [7, 3, 1, "_CPPv4I0EN2ac14MemberFunctionE", "ac::MemberFunction::T"], [12, 2, 1, "_CPPv4I00EN2ac21NothrowAssignableFromE", "ac::NothrowAssignableFrom"], [12, 3, 1, "_CPPv4I00EN2ac21NothrowAssignableFromE", "ac::NothrowAssignableFrom::Lhs"], [12, 3, 1, "_CPPv4I00EN2ac21NothrowAssignableFromE", "ac::NothrowAssignableFrom::Rhs"], [12, 2, 1, "_CPPv4I0DpEN2ac24NothrowConstructibleFromE", "ac::NothrowConstructibleFrom"], [12, 3, 1, "_CPPv4I0DpEN2ac24NothrowConstructibleFromE", "ac::NothrowConstructibleFrom::Args"], [12, 3, 1, "_CPPv4I0DpEN2ac24NothrowConstructibleFromE", "ac::NothrowConstructibleFrom::T"], [12, 2, 1, "_CPPv4I00EN2ac20NothrowConvertibleToE", "ac::NothrowConvertibleTo"], [12, 3, 1, "_CPPv4I00EN2ac20NothrowConvertibleToE", "ac::NothrowConvertibleTo::From"], [12, 3, 1, "_CPPv4I00EN2ac20NothrowConvertibleToE", "ac::NothrowConvertibleTo::To"], [12, 2, 1, "_CPPv4I0EN2ac24NothrowCopyConstructibleE", "ac::NothrowCopyConstructible"], [12, 3, 1, "_CPPv4I0EN2ac24NothrowCopyConstructibleE", "ac::NothrowCopyConstructible::T"], [12, 2, 1, "_CPPv4I0EN2ac15NothrowCopyableE", "ac::NothrowCopyable"], [12, 3, 1, "_CPPv4I0EN2ac15NothrowCopyableE", "ac::NothrowCopyable::T"], [12, 2, 1, "_CPPv4I0EN2ac27NothrowDefaultInitializableE", "ac::NothrowDefaultInitializable"], [12, 3, 1, "_CPPv4I0EN2ac27NothrowDefaultInitializableE", "ac::NothrowDefaultInitializable::T"], [12, 2, 1, "_CPPv4I0EN2ac25NothrowEqualityComparableE", "ac::NothrowEqualityComparable"], [12, 3, 1, "_CPPv4I0EN2ac25NothrowEqualityComparableE", "ac::NothrowEqualityComparable::T"], [12, 2, 1, "_CPPv4I00EN2ac30NothrowExplicitlyConvertibleToE", "ac::NothrowExplicitlyConvertibleTo"], [12, 3, 1, "_CPPv4I00EN2ac30NothrowExplicitlyConvertibleToE", "ac::NothrowExplicitlyConvertibleTo::From"], [12, 3, 1, "_CPPv4I00EN2ac30NothrowExplicitlyConvertibleToE", "ac::NothrowExplicitlyConvertibleTo::To"], [12, 2, 1, "_CPPv4I0EN2ac14NothrowMovableE", "ac::NothrowMovable"], [12, 3, 1, "_CPPv4I0EN2ac14NothrowMovableE", "ac::NothrowMovable::T"], [12, 2, 1, "_CPPv4I0EN2ac24NothrowMoveConstructibleE", "ac::NothrowMoveConstructible"], [12, 3, 1, "_CPPv4I0EN2ac24NothrowMoveConstructibleE", "ac::NothrowMoveConstructible::T"], [12, 2, 1, "_CPPv4I0EN2ac14NothrowRegularE", "ac::NothrowRegular"], [12, 3, 1, "_CPPv4I0EN2ac14NothrowRegularE", "ac::NothrowRegular::T"], [12, 2, 1, "_CPPv4I0EN2ac18NothrowSemiregularE", "ac::NothrowSemiregular"], [12, 3, 1, "_CPPv4I0EN2ac18NothrowSemiregularE", "ac::NothrowSemiregular::T"], [12, 2, 1, "_CPPv4I0EN2ac16NothrowSwappableE", "ac::NothrowSwappable"], [12, 3, 1, "_CPPv4I0EN2ac16NothrowSwappableE", "ac::NothrowSwappable::T"], [12, 2, 1, "_CPPv4I00EN2ac20NothrowSwappableWithE", "ac::NothrowSwappableWith"], [12, 3, 1, "_CPPv4I00EN2ac20NothrowSwappableWithE", "ac::NothrowSwappableWith::T"], [12, 3, 1, "_CPPv4I00EN2ac20NothrowSwappableWithE", "ac::NothrowSwappableWith::U"], [12, 2, 1, "_CPPv4I00EN2ac23TriviallyAssignableFromE", "ac::TriviallyAssignableFrom"], [12, 3, 1, "_CPPv4I00EN2ac23TriviallyAssignableFromE", "ac::TriviallyAssignableFrom::Lhs"], [12, 3, 1, "_CPPv4I00EN2ac23TriviallyAssignableFromE", "ac::TriviallyAssignableFrom::Rhs"], [12, 2, 1, "_CPPv4I0DpEN2ac26TriviallyConstructibleFromE", "ac::TriviallyConstructibleFrom"], [12, 3, 1, "_CPPv4I0DpEN2ac26TriviallyConstructibleFromE", "ac::TriviallyConstructibleFrom::Args"], [12, 3, 1, "_CPPv4I0DpEN2ac26TriviallyConstructibleFromE", "ac::TriviallyConstructibleFrom::T"], [12, 2, 1, "_CPPv4I0EN2ac26TriviallyCopyConstructibleE", "ac::TriviallyCopyConstructible"], [12, 3, 1, "_CPPv4I0EN2ac26TriviallyCopyConstructibleE", "ac::TriviallyCopyConstructible::T"], [12, 2, 1, "_CPPv4I0EN2ac17TriviallyCopyableE", "ac::TriviallyCopyable"], [12, 3, 1, "_CPPv4I0EN2ac17TriviallyCopyableE", "ac::TriviallyCopyable::T"], [12, 2, 1, "_CPPv4I0EN2ac29TriviallyDefaultInitializableE", "ac::TriviallyDefaultInitializable"], [12, 3, 1, "_CPPv4I0EN2ac29TriviallyDefaultInitializableE", "ac::TriviallyDefaultInitializable::T"], [12, 2, 1, "_CPPv4I0EN2ac16TriviallyMovableE", "ac::TriviallyMovable"], [12, 3, 1, "_CPPv4I0EN2ac16TriviallyMovableE", "ac::TriviallyMovable::T"], [12, 2, 1, "_CPPv4I0EN2ac26TriviallyMoveConstructibleE", "ac::TriviallyMoveConstructible"], [12, 3, 1, "_CPPv4I0EN2ac26TriviallyMoveConstructibleE", "ac::TriviallyMoveConstructible::T"], [12, 2, 1, "_CPPv4I0EN2ac20TriviallySemiregularE", "ac::TriviallySemiregular"], [12, 3, 1, "_CPPv4I0EN2ac20TriviallySemiregularE", "ac::TriviallySemiregular::T"], [7, 4, 1, "_CPPv4I0EN2ac28accepts_variadic_arguments_vE", "ac::accepts_variadic_arguments_v"], [7, 3, 1, "_CPPv4I0EN2ac28accepts_variadic_arguments_vE", "ac::accepts_variadic_arguments_v::Fn"], [7, 4, 1, "_CPPv4I0EN2ac7arity_vE", "ac::arity_v"], [7, 3, 1, "_CPPv4I0EN2ac7arity_vE", "ac::arity_v::Fn"], [13, 4, 1, "_CPPv4I_bEN2ac6bool_cE", "ac::bool_c"], [13, 3, 1, "_CPPv4I_bEN2ac6bool_cE", "ac::bool_c::B"], [13, 1, 1, "_CPPv4I_bEN2ac13bool_constantE", "ac::bool_constant"], [13, 3, 1, "_CPPv4I_bEN2ac13bool_constantE", "ac::bool_constant::B"], [13, 5, 1, "_CPPv4I_DaEN2ac8constantE", "ac::constant"], [13, 3, 1, "_CPPv4I_DaEN2ac8constantE", "ac::constant::X"], [14, 1, 1, "_CPPv4N2ac17constant_literalsE", "ac::constant_literals"], [14, 6, 1, "_CPPv4I_DpcEN2ac17constant_literalsli2_cEDav", "ac::constant_literals::operator&quot;&quot;_c"], [14, 3, 1, "_CPPv4I_DpcEN2ac17constant_literalsli2_cEDav", "ac::constant_literals::operator&quot;&quot;_c::Chars"], [14, 6, 1, "_CPPv4I_DpcEN2ac17constant_literalsli4_cllEDav", "ac::constant_literals::operator&quot;&quot;_cll"], [14, 3, 1, "_CPPv4I_DpcEN2ac17constant_literalsli4_cllEDav", "ac::constant_literals::operator&quot;&quot;_cll::Chars"], [14, 6, 1, "_CPPv4I_DpcEN2ac17constant_literalsli3_cuEDav", "ac::constant_literals::operator&quot;&quot;_cu"], [14, 3, 1, "_CPPv4I_DpcEN2ac17constant_literalsli3_cuEDav", "ac::constant_literals::operator&quot;&quot;_cu::Chars"], [14, 6, 1, "_CPPv4I_DpcEN2ac17constant_literalsli5_cullEDav", "ac::constant_literals::operator&quot;&quot;_cull"], [14, 3, 1, "_CPPv4I_DpcEN2ac17constant_literalsli5_cullEDav", "ac::constant_literals::operator&quot;&quot;_cull::Chars"], [5, 5, 1, "_CPPv4I0EN2ac5inoutE", "ac::inout"], [5, 3, 1, "_CPPv4I0EN2ac5inoutE", "ac::inout::T"], [13, 4, 1, "_CPPv4I_iEN2ac5int_cE", "ac::int_c"], [13, 3, 1, "_CPPv4I_iEN2ac5int_cE", "ac::int_c::N"], [13, 1, 1, "_CPPv4I_iEN2ac12int_constantE", "ac::int_constant"], [13, 3, 1, "_CPPv4I_iEN2ac12int_constantE", "ac::int_constant::N"], [8, 6, 1, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", "ac::invoke_all_matching"], [8, 3, 1, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", "ac::invoke_all_matching::Args"], [8, 3, 1, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", "ac::invoke_all_matching::T"], [8, 7, 1, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", "ac::invoke_all_matching::args"], [8, 7, 1, "_CPPv4I_5TupleDpEN2ac19invoke_all_matchingEvRR1TDpRR4Args", "ac::invoke_all_matching::tuple_to_invoke"], [8, 6, 1, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", "ac::invoke_first_matching"], [8, 3, 1, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", "ac::invoke_first_matching::Args"], [8, 3, 1, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", "ac::invoke_first_matching::T"], [8, 7, 1, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", "ac::invoke_first_matching::args"], [8, 7, 1, "_CPPv4I_5TupleDpEN2ac21invoke_first_matchingEDcRR1TDpRR4Args", "ac::invoke_first_matching::tuple_to_invoke"], [19, 6, 1, "_CPPv4N2ac8is_alphaEc", "ac::is_alpha"], [19, 7, 1, "_CPPv4N2ac8is_alphaEc", "ac::is_alpha::c"], [19, 6, 1, "_CPPv4N2ac15is_alphanumericEc", "ac::is_alphanumeric"], [19, 7, 1, "_CPPv4N2ac15is_alphanumericEc", "ac::is_alphanumeric::c"], [13, 5, 1, "_CPPv4I0EN2ac11is_constantE", "ac::is_constant"], [13, 3, 1, "_CPPv4I0EN2ac11is_constantE", "ac::is_constant::T"], [13, 4, 1, "_CPPv4I0EN2ac13is_constant_vE", "ac::is_constant_v"], [13, 3, 1, "_CPPv4I0EN2ac13is_constant_vE", "ac::is_constant_v::T"], [19, 6, 1, "_CPPv4N2ac8is_digitEc", "ac::is_digit"], [19, 7, 1, "_CPPv4N2ac8is_digitEc", "ac::is_digit::c"], [5, 4, 1, "_CPPv4I0EN2ac10is_inout_vE", "ac::is_inout_v"], [5, 3, 1, "_CPPv4I0EN2ac10is_inout_vE", "ac::is_inout_v::T"], [19, 6, 1, "_CPPv4N2ac8is_lowerEc", "ac::is_lower"], [19, 7, 1, "_CPPv4N2ac8is_lowerEc", "ac::is_lower::c"], [7, 4, 1, "_CPPv4I0EN2ac13is_noexcept_vE", "ac::is_noexcept_v"], [7, 3, 1, "_CPPv4I0EN2ac13is_noexcept_vE", "ac::is_noexcept_v::Fn"], [5, 4, 1, "_CPPv4I0EN2ac8is_out_vE", "ac::is_out_v"], [5, 3, 1, "_CPPv4I0EN2ac8is_out_vE", "ac::is_out_v::T"], [19, 6, 1, "_CPPv4N2ac8is_spaceEc", "ac::is_space"], [19, 7, 1, "_CPPv4N2ac8is_spaceEc", "ac::is_space::c"], [19, 6, 1, "_CPPv4N2ac8is_upperEc", "ac::is_upper"], [19, 7, 1, "_CPPv4N2ac8is_upperEc", "ac::is_upper::c"], [2, 5, 1, "_CPPv4I_NSt9invocableEEN2ac4lazyE", "ac::lazy"], [2, 3, 1, "_CPPv4I_NSt9invocableEEN2ac4lazyE", "ac::lazy::Function"], [2, 6, 1, "_CPPv4N2ac4lazycvNSt15invoke_result_tI8FunctionEEEv", "ac::lazy::operator std::invoke_result_t&lt;Function&gt;"], [5, 5, 1, "_CPPv4I0EN2ac3outE", "ac::out"], [5, 3, 1, "_CPPv4I0EN2ac3outE", "ac::out::T"], [5, 6, 1, "_CPPv4NK2ac3outcv1TEv", "ac::out::operator T"], [5, 6, 1, "_CPPv4NK2ac3outmlEv", "ac::out::operator*"], [5, 6, 1, "_CPPv4N2ac3outptEv", "ac::out::operator-&gt;"], [5, 6, 1, "_CPPv4I0EN2ac3outaSER3outRR3Src", "ac::out::operator="], [5, 3, 1, "_CPPv4I0EN2ac3outaSER3outRR3Src", "ac::out::operator=::Src"], [5, 7, 1, "_CPPv4I0EN2ac3outaSER3outRR3Src", "ac::out::operator=::src"], [5, 6, 1, "_CPPv4I0EN2ac3out3outERR3Arg", "ac::out::out"], [5, 6, 1, "_CPPv4I0EN2ac3out3outERR3outI1UE", "ac::out::out"], [5, 3, 1, "_CPPv4I0EN2ac3out3outERR3Arg", "ac::out::out::Arg"], [5, 3, 1, "_CPPv4I0EN2ac3out3outERR3outI1UE", "ac::out::out::U"], [5, 7, 1, "_CPPv4I0EN2ac3out3outERR3Arg", "ac::out::out::arg"], [5, 7, 1, "_CPPv4I0EN2ac3out3outERR3outI1UE", "ac::out::out::src"], [6, 5, 1, "_CPPv4IDpEN2ac10overloadedE", "ac::overloaded"], [6, 3, 1, "_CPPv4IDpEN2ac10overloadedE", "ac::overloaded::Lambdas"], [7, 1, 1, "_CPPv4I_6size_t0EN2ac14parameter_at_tE", "ac::parameter_at_t"], [7, 3, 1, "_CPPv4I_6size_t0EN2ac14parameter_at_tE", "ac::parameter_at_t::Fn"], [7, 3, 1, "_CPPv4I_6size_t0EN2ac14parameter_at_tE", "ac::parameter_at_t::Index"], [7, 1, 1, "_CPPv4I0EN2ac8return_tE", "ac::return_t"], [7, 3, 1, "_CPPv4I0EN2ac8return_tE", "ac::return_t::Fn"], [13, 4, 1, "_CPPv4I_6size_tEN2ac6size_cE", "ac::size_c"], [13, 3, 1, "_CPPv4I_6size_tEN2ac6size_cE", "ac::size_c::N"], [13, 1, 1, "_CPPv4I_6size_tEN2ac13size_constantE", "ac::size_constant"], [13, 3, 1, "_CPPv4I_6size_tEN2ac13size_constantE", "ac::size_constant::N"]]}, "objnames": {"0": ["c", "macro", "C macro"], "1": ["cpp", "type", "C++ type"], "2": ["cpp", "concept", "C++ concept"], "3": ["cpp", "templateParam", "C++ template parameter"], "4": ["cpp", "member", "C++ member"], "5": ["cpp", "class", "C++ class"], "6": ["cpp", "function", "C++ function"], "7": ["cpp", "functionParam", "C++ function parameter"]}, "objtypes": {"0": "c:macro", "1": "cpp:type", "2": "cpp:concept", "3": "cpp:templateParam", "4": "cpp:member", "5": "cpp:class", "6": "cpp:function", "7": "cpp:functionParam"}, "terms": {"": [1, 4, 5, 7, 8, 10, 13, 21, 22, 23], "05": 2, "0x09": 19, "0x0a": 19, "0x0b": 19, "0x0c": 19, "0x0d": 19, "0x20": 19, "1": 13, "10": 20, "11": [4, 7], "16": [2, 20], "17": 2, "1_85_0": [], "2": [2, 13, 20], "20": [4, 10], "2018": 2, "2019": 20, "2_c": 13, "42_c": 14, "As": 13, "But": 5, "For": [2, 4, 5, 7, 10, 12, 13, 22], "If": [2, 5], "In": [5, 10, 21], "It": [1, 2, 5, 7, 21], "NO": 22, "On": 20, "One": [4, 5, 22], "Or": 2, "The": [4, 7, 13, 17, 19, 22], "There": [5, 12], "These": [4, 7, 12, 23], "To": [12, 21], "_": [], "__snakecase_name__": 21, "_c": 14, "_cll": 14, "_cu": 14, "_cull": 14, "_static": 22, "aaa": [], "about": [5, 7], "abov": 7, "ac": [2, 5, 7, 8, 13, 14, 19], "ac_always_inlin": 1, "ac_compiler_clang": 16, "ac_compiler_gcc": 16, "ac_compiler_gcc_compat": 16, "ac_compiler_msvc": 16, "ac_concat": 17, "ac_deduce_noexcept_and_initi": 4, "ac_deduce_noexcept_and_return": 4, "ac_deduce_noexcept_decltype_and_return": 4, "ac_deduce_noexcept_requires_and_return": 4, "ac_function_nam": 3, "ac_function_signatur": 3, "ac_never_inlin": 1, "ac_no_unique_address": 9, "ac_unparenthes": 17, "accepts_variadic_argu": 7, "accepts_variadic_arguments_v": 7, "access": [5, 13, 14], "account": 19, "achiev": [5, 10, 13], "actl": 22, "actl_unit_test": 20, "actual": [5, 22], "ad": 5, "add": 5, "address": [1, 5], "adjust": 21, "adl": 5, "advanc": 5, "affect": [22, 23], "after": [5, 17, 21], "aim": 5, "akrzemi1": 2, "alcash07": 22, "algorithm": [5, 18, 23], "all": [5, 6, 8, 10, 12, 13, 21, 22], "allow": [5, 7, 22], "alphabet": 19, "alreadi": 2, "also": [4, 13, 22], "altern": [2, 5], "alwai": [2, 4, 5, 13], "an": [1, 2, 5, 13, 14, 17, 19, 22], "analog": [2, 7, 13, 17], "ani": [2, 3, 5, 10, 22], "annot": 22, "anoth": 5, "appear": 22, "appli": [10, 13], "applic": 23, "approach": [2, 14], "appropri": 5, "ar": [4, 5, 7, 8, 12, 13, 19, 20, 22], "arbitrari": 5, "aren": [4, 8], "arg": [5, 7, 8, 12], "arge": [], "argument": [5, 17, 20], "ariti": 7, "arity_v": 7, "arrai": 13, "articl": [2, 5, 14, 22], "aspect": 5, "assign": 5, "assignable_from": 12, "attribut": 10, "auto": [2, 4, 5, 8, 13, 14], "automat": [4, 22], "avail": 5, "avoid": [1, 2, 4, 13], "b": 13, "bar": 17, "base": [4, 10, 22], "basic": 5, "becaus": [1, 4, 5, 8, 13, 17, 19, 20, 22], "been": 17, "behavior": [1, 5], "being": 5, "benefit": [2, 5], "best": [13, 22], "better": [2, 5], "between": 8, "biggest": 22, "binari": 1, "bind": 5, "block": 5, "blog": [2, 10], "blueprint": 21, "boilerpl": 22, "bool": [4, 5, 7, 13, 19], "bool_c": 13, "bool_const": 13, "boost": 7, "boost_hof_return": 4, "boost_pp_cat": 17, "both": 5, "branch": 22, "breath": 22, "bug": 20, "build": 22, "built": 5, "c": [1, 4, 5, 7, 10, 13, 14, 19, 22], "cach": 2, "call": [2, 5, 7], "callabl": 8, "callable_trait": [], "callabletrait": 7, "can": [2, 4, 5, 13, 14, 17, 19, 20, 21, 22, 23], "cannot": 7, "canon": 22, "carriag": 19, "case": [2, 5, 7, 20], "catch2": 20, "caution": 1, "caveat": 4, "cctype": 19, "chang": [5, 20, 21], "char": [14, 19], "char_class": [], "charact": 18, "check": [4, 5, 12, 19, 22], "checkout": 21, "chosen": 22, "clariti": 22, "class": [4, 5, 6, 7, 8, 10, 12, 13, 22], "classif": 18, "clear": [4, 5, 7, 22], "clearli": 5, "cmake": [20, 22], "code": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 19, 20, 22, 23], "collect": 0, "color": 13, "com": [2, 6], "combin": 6, "comma": 17, "command": 22, "comment": 22, "commit": 22, "competit": 23, "compil": [1, 3, 4, 7, 13, 15], "complex": 5, "complic": [14, 22], "compon": 23, "compress": 10, "comput": 13, "computevalu": 2, "concaten": 17, "concept": [1, 7, 11], "condition": 2, "configur": [20, 22], "confirm": 7, "consid": 5, "consist": [5, 13], "const": [5, 7], "constant": [11, 14, 23], "constant_liter": [11, 13], "constexpr": [5, 13], "construct": 2, "constructible_from": 12, "constructor": [2, 4, 5], "contain": [2, 5, 22], "content": [14, 22], "context": 23, "contigu": 5, "continu": 21, "contribut": 21, "conveni": [6, 7, 14], "convent": 5, "convers": [2, 5], "convert": 5, "convertible_to": 12, "copi": [2, 5], "copy_construct": 12, "copy_rang": 5, "copyabl": 12, "copyright": 21, "correct": 4, "correctli": 4, "cpp": 6, "cpprefer": [6, 7], "creat": [14, 22], "current": [10, 14, 22], "custom": 10, "cv": 7, "cvref": 5, "data": [4, 5], "debug": [1, 20], "decim": 19, "decis": 23, "declar": [4, 7], "decltyp": [4, 8, 13], "deduc": 4, "deduct": 4, "default_initializ": 12, "defin": [1, 2, 4, 10, 16, 22], "definit": [5, 12], "deleg": 4, "depth": 2, "deriv": 4, "describ": 22, "descript": 22, "design": [6, 22], "destructor": 4, "detail": [5, 7, 22], "detect": [13, 15], "differ": [4, 13, 19, 22], "differenti": 5, "digit": 19, "direct": [5, 22], "directori": [], "disabl": [1, 4], "discourag": 22, "distinguish": 5, "do": [13, 22], "doc": 22, "document": 5, "documentatit": 22, "doesn": [1, 2, 4, 5, 10, 13], "don": [5, 7, 19, 22], "done": 22, "doxygen": [], "doxygenclass": [], "doxygenstruct": [], "dst": 5, "dstcontain": 5, "duplic": 4, "easi": 22, "easier": [4, 13, 22], "effici": 19, "either": 4, "element": [2, 8, 13], "elid": 2, "emerg": 23, "emplac": 2, "emplace_hint": [], "empti": 10, "en": 6, "enabl": 5, "enclos": [3, 7], "encourag": 5, "end": [2, 23], "enforc": 5, "enough": 13, "eof": 19, "equal": 13, "equality_compar": 12, "error": [4, 7, 13], "especi": [5, 12], "etc": 22, "evalu": 0, "even": [2, 5], "everi": 22, "examin": 22, "exampl": [2, 4, 5, 13, 14, 22], "exclude_symbol": 22, "exist": [2, 7, 8, 22], "expand": [7, 17], "expans": 17, "expect": [5, 19], "explain": 22, "explan": [2, 14], "explicit": 5, "explicitli": 13, "expos": 1, "express": [4, 22], "extens": [1, 5, 9, 21, 22], "extra": [2, 5, 17], "extract": 22, "extract_al": 22, "f": [7, 19], "facil": 13, "fact": 5, "failur": 22, "false_typ": 13, "faster": 19, "feed": 19, "few": 19, "field": 10, "file": 22, "filter": 20, "final": [5, 10, 17, 22], "find": 2, "first": [2, 7, 8, 13], "fit": 22, "fix": 10, "fn": 7, "focus": 23, "folder": 22, "follow": [4, 7, 14, 22], "foo": 17, "forc": 1, "form": [4, 19], "format": 22, "forward": 8, "found": 22, "free": [5, 22], "free_funct": 7, "free_function_trait": [], "freefunct": 7, "from": [2, 4, 5, 6, 12, 17], "full": 22, "fulli": 20, "function": [1, 2, 3, 4, 5, 6, 13, 14, 17, 19, 22, 23], "function_object": 7, "function_object_trait": [], "function_trait": 7, "functionobject": 7, "gain": 14, "gener": [10, 20, 22], "generate_html": 22, "generate_xml": 22, "get": [4, 13], "git": 21, "github": [2, 10, 22], "given": [4, 6, 13], "go": 21, "goal": 22, "good": [10, 22], "googl": 5, "group": 12, "guarante": [5, 13], "guess": 5, "guid": 5, "ha": [2, 4, 13, 14], "had": 22, "handl": [5, 19], "have": [1, 13, 17, 22], "header": 9, "heavili": 7, "help": [4, 5, 13], "helper": 23, "here": [2, 5, 19, 22], "high": 22, "higher": 20, "highli": 21, "hope": 2, "horizont": 19, "how": 22, "howev": [1, 4, 5], "hpp": [7, 12, 21], "html": 22, "http": [2, 6, 22], "i": [1, 2, 3, 4, 5, 7, 8, 10, 13, 14, 17, 19, 20, 22], "id": 20, "idea": 2, "ignor": 10, "ill": 4, "imagin": 5, "immedi": 5, "implement": [2, 5, 22], "implicit": 5, "implicitli": [5, 19], "import": [1, 5], "imposs": 13, "improv": 22, "includ": [7, 12, 13], "inconsist": 13, "inconveni": 10, "incorrect": 5, "incorrectli": 22, "increas": 1, "inde": 7, "index": [7, 22], "indic": 13, "inform": [7, 22], "initi": 4, "inlin": [0, 2, 5, 14, 19], "inline_inherited_memb": 22, "inout": [0, 22], "input": 5, "inrang": 5, "insert": 2, "insid": 17, "inspir": 4, "inst": 22, "instal": [21, 22], "instead": [2, 4, 13, 22], "int": [4, 5, 13, 14], "int_c": 13, "int_const": 13, "integral_const": 13, "interest": 22, "interfac": [5, 7, 13, 22], "introduc": [10, 22], "introspect": 15, "invoc": [0, 2], "invok": 8, "invoke_all_match": 8, "invoke_first_match": 8, "invoke_result_t": 2, "involv": 12, "io": [2, 22], "is_alpha": 19, "is_alphanumer": 19, "is_const": 13, "is_constant_v": 13, "is_digit": 19, "is_inout": 5, "is_inout_v": 5, "is_low": 19, "is_noexcept": 7, "is_noexcept_v": 7, "is_nothrow_construct": 4, "is_out": 5, "is_out_v": 5, "is_spac": 19, "is_upp": 19, "isn": 13, "issu": 10, "iter": [2, 22], "its": [1, 8, 14, 22], "itself": [5, 22], "json": 20, "just": 5, "kei": 2, "keyword": [], "known": [10, 13], "label": 13, "lack": 22, "lambda": 6, "languag": 4, "larg": 23, "latter": 5, "launch": 20, "lazi": 0, "lazili": 2, "left": 5, "letter": 19, "level": 22, "lh": [4, 12, 17], "lib": [], "librari": [0, 9, 11, 13, 21, 22, 23], "lightweight": 7, "like": [2, 5, 7, 17], "limit": 7, "line": [2, 19, 22], "link": 22, "list": 4, "liter": [3, 14], "ll": 2, "local": [19, 22], "locat": 22, "long": 14, "look": 2, "lowercas": 19, "macro": [1, 4, 17, 22], "mai": [8, 22], "main": 22, "maintain": 22, "make": [4, 5, 10, 22], "mani": [5, 13], "manual": [5, 22], "map": 2, "match": 5, "maythrowconvertibleto": 12, "maythrowcopy": 12, "maythrowcopyconstruct": 12, "measur": 5, "mechan": 5, "member": [4, 5, 7, 13], "member_funct": 7, "member_function_trait": [], "memberfunct": 7, "memori": [5, 10, 23], "meta": 23, "might": 5, "misguid": 5, "mode": 1, "modern": 5, "modif": 5, "modifi": 5, "more": [4, 5, 22], "most": [5, 7, 14, 22], "movabl": 12, "move": 2, "move_construct": 12, "msvc": 10, "multipl": [2, 8], "n": [13, 19], "name": [0, 2, 21, 22], "namespac": [3, 5, 14, 19, 22], "necessari": 2, "need": [2, 5, 10, 17, 22], "new": 5, "newcom": 5, "no_unique_address": 10, "nodiscard": 5, "noexcept": [0, 5, 14, 19], "nojekyl": 22, "non": [4, 7, 10], "noninlinedfunct": [], "note": [4, 22], "nothrow": 12, "nothrowassignablefrom": 12, "nothrowconstructiblefrom": 12, "nothrowconvertibleto": 12, "nothrowcopy": 12, "nothrowcopyconstruct": 12, "nothrowdefaultinitializ": 12, "nothrowequalitycompar": 12, "nothrowexplicitlyconvertibleto": 12, "nothrowmov": 12, "nothrowmoveconstruct": 12, "nothrowregular": 12, "nothrowsemiregular": 12, "nothrowswapp": 12, "nothrowswappablewith": 12, "numer": [20, 23], "object": [5, 6, 7, 14], "obviou": 5, "older": 20, "one": [5, 13, 19], "ones": 19, "onli": [1, 2, 4, 5, 7, 10, 22], "open": 22, "oper": [2, 4, 5, 7, 12, 13, 14], "opt1": [], "opt2": [], "optim": [1, 10], "option": [2, 5, 22], "optional1": 2, "optional2": 2, "order": [5, 8], "org": [], "origin": 2, "other": [20, 22], "otherwis": 22, "our": [2, 7], "out": [0, 22], "outermost": 17, "output": [5, 22], "over": 5, "overload": [0, 5, 7], "overloaded1": [], "overloaded2": [], "overus": 1, "page": 22, "pair": 10, "paragraph": 5, "paramet": [0, 2, 3, 7, 13, 17, 22], "parameter_at": 7, "parameter_at_t": 7, "parenthesi": 17, "pars": 22, "parti": 5, "particular": [14, 21], "pass": [5, 8], "perform": [1, 2], "place": 5, "platform": [1, 23], "pleas": [2, 20], "point": [5, 22], "pointer": [5, 7], "portabl": [1, 3, 10, 22], "portion": 23, "posit": 13, "possibl": [2, 5, 14, 22], "possibli": 5, "potenti": 5, "practic": 10, "precis": 1, "predefin": 22, "prefer": [5, 20, 22], "preprocess": 17, "preprocessor": 23, "preserv": 5, "prevent": [1, 5], "previous": 10, "primarili": 6, "privat": [], "problem": [5, 22], "produc": [4, 13, 14], "program": [5, 11], "project": [20, 22], "propos": 5, "provid": [0, 1, 5, 7, 9, 11, 12, 13, 14, 19, 22, 23], "public": [2, 5, 6, 13, 22], "put": 22, "qualif": 7, "qualifi": [3, 5], "quick": 22, "quot": [], "quuxpluson": 2, "r": 19, "rang": [5, 22], "rational": 22, "re": [5, 21], "read": [5, 13, 22], "reason": [5, 7], "recogn": 5, "recommend": [1, 5, 21], "redefin": 2, "ref": 7, "refer": 22, "referenc": 5, "regular": 12, "relat": [0, 1], "releas": 20, "reli": 22, "remark": 2, "remov": [5, 17], "remove_cvref_t": 5, "remove_reference_t": 5, "repeat": 5, "repetit": 22, "replac": 10, "repres": [3, 5, 22], "repretit": 13, "request": 2, "requir": [2, 4, 8, 12, 20, 22], "restructuredtext": 22, "result": [2, 7, 8, 10, 13], "return": [4, 5, 7, 8, 13, 19], "return_t": 7, "return_typ": 7, "revisit": 22, "rewritten": 4, "rh": [4, 12, 17], "round": 2, "rst": 22, "run": [21, 22, 23], "runtim": 13, "rvalu": 2, "same": 5, "script": [21, 22], "second": 2, "section": 22, "see": [4, 5, 6, 10, 14, 20, 22], "seem": 5, "self": [5, 22], "semiregular": 12, "separ": 17, "set": [20, 21, 22], "sfina": 4, "sh": [21, 22], "share": 8, "shell": 22, "short": 3, "shorter": 13, "shortest": 2, "should": [1, 5, 22], "shouldn": 5, "show": 21, "sign": 5, "signatur": 0, "similar": [2, 5, 10, 19], "similarli": 14, "simpl": [2, 5], "simplest": 2, "simplic": 22, "simplifi": [2, 5], "sinc": [4, 7], "singl": [1, 5, 7], "site": 5, "size": [1, 5], "size_c": 13, "size_const": 13, "size_t": [7, 13], "so": [2, 5, 14, 23], "solut": [5, 17], "some": [1, 5], "someth": 5, "sometim": 17, "sort": 5, "sort_rang": 5, "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 19, 22], "space": 19, "span": [5, 13], "special": [5, 13, 22], "specif": [2, 3, 4, 23], "specifi": [0, 1, 5, 13, 20], "src": 5, "srcrang": 5, "standard": [1, 9, 10, 12, 13, 14, 19], "start": 23, "static": 7, "std": [2, 4, 5, 12, 13], "step": [1, 22], "still": [4, 5, 13], "stop_tracking_vscod": 21, "string": [3, 23], "strong": 5, "strongli": [5, 22], "struct": [2, 6, 13], "structur": [5, 22], "studio": 20, "style": [5, 22], "sub": 23, "subclass": 5, "super": 2, "supplementari": 12, "support": [4, 5, 7, 13, 20, 22], "surprisingli": 2, "swappabl": 12, "swappable_with": 12, "synonym": [], "syntax": [5, 13], "t": [1, 2, 4, 5, 7, 8, 10, 12, 13, 19, 22], "tab": 19, "target": 20, "task": [20, 22], "templat": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 23], "test": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 19, 23], "than": [5, 19], "thank": 2, "thei": [5, 7, 8, 12, 13, 17, 19, 22], "them": [5, 7, 22, 23], "themat": 23, "thi": [1, 2, 4, 5, 7, 17, 21, 22], "thin": 5, "thing": [13, 22], "third": 5, "through": 7, "throughout": 13, "throw": 4, "time": [2, 13, 19, 22], "todo": 13, "togeth": 22, "tool": [20, 22], "topic": 23, "trait": [0, 12, 13], "transform": 5, "treat": 22, "trivial": [12, 13], "triviallyassignablefrom": 12, "triviallyconstructiblefrom": 12, "triviallycopy": 12, "triviallycopyconstruct": 12, "triviallydefaultinitializ": 12, "triviallymov": 12, "triviallymoveconstruct": 12, "triviallysemiregular": 12, "true_typ": 13, "try": 19, "try_emplac": 2, "tupl": [0, 13], "tuple_to_invok": 8, "two": [5, 22], "type": [4, 5, 7, 12, 13, 14, 22], "typenam": 7, "u": [5, 12], "uncondition": 2, "undefin": 5, "undergo": 5, "understand": [5, 23], "undesir": 1, "unfortun": [4, 10, 13], "unit": 12, "unless": 10, "unlik": 4, "unsign": 14, "until": [4, 10], "up": [21, 23], "uppercas": 19, "us": [1, 2, 4, 5, 7, 10, 12, 13, 14, 17, 20, 22, 23], "util": [0, 4, 6, 8, 11, 13, 17, 18, 22, 23], "v": [19, 22], "valu": [5, 13], "variabl": 5, "variant": 6, "variou": 23, "vector": 5, "veri": [5, 10], "version": [7, 10, 20], "vertic": 19, "via": [5, 20], "visibl": 5, "visit": 6, "visual": 20, "void": [5, 7, 8], "volatil": 7, "vscode": [20, 21], "w": 6, "wa": [5, 7, 10], "wai": [1, 2, 7, 10, 14, 21], "want": [], "wast": 10, "we": [1, 2, 4, 5, 10, 12, 13, 22], "web": 22, "well": [17, 20], "weren": 12, "what": 22, "when": [2, 4, 5, 6, 13, 22], "whenev": 22, "where": [2, 5], "whether": [5, 12, 13], "which": [1, 2, 4, 5, 10, 22], "while": [2, 5], "whitespac": 19, "why": [7, 14], "wide": 23, "window": 20, "with_result_of_t": 2, "within": 14, "without": [3, 5, 21, 22], "won": 22, "wordpress": 2, "work": 10, "worth": [4, 5], "would": [5, 22], "wrap": [5, 17], "wrapper": [2, 5, 10, 22], "write": [4, 13, 23], "written": [5, 20, 22], "www": [], "x": [4, 5, 13], "xml": 22, "y": 5, "ye": 22, "year": 5, "yellow": 13, "yet": 5, "you": [2, 5, 21, 22], "your": 21, "yourself": 22, "z": 5}, "titles": ["functional", "Inlining", "Lazy evaluation", "Name and signature", "<code class=\"code highlight cpp docutils literal highlight-cpp\"><span class=\"k\">noexcept</span></code> specifier", "out/inout parameters", "overloaded", "Functional traits", "Tuple invocation", "memory", "AC_NO_UNIQUE_ADDRESS", "meta", "Concepts", "constant", "constant_literals", "platform", "Compiler detection", "preprocessor", "string", "Character classification", "Running tests", "Writing code", "Writing documentation", "ACTL documentation"], "titleterms": {"ac_no_unique_address": 10, "actl": 23, "between": 5, "callabl": [], "char_class": [], "charact": 19, "classif": 19, "code": 21, "comparison": 12, "compil": 16, "concept": 12, "constant": 13, "constant_liter": 14, "content": 23, "contribut": 23, "core": 12, "deduct": [], "design": [4, 5, 7, 14, 23], "detect": [5, 16], "differ": 5, "document": [22, 23], "doxygen": 22, "evalu": 2, "free": 7, "function": [0, 7], "inlin": 1, "inout": 5, "invoc": 8, "languag": 12, "lazi": 2, "macro": [], "memori": 9, "meta": 11, "name": 3, "noexcept": 4, "object": 12, "out": 5, "overload": 6, "paramet": 5, "platform": 15, "preprocessor": 17, "publish": 22, "qualifi": 7, "refer": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 19], "run": 20, "signatur": 3, "specifi": 4, "sphinx": 22, "string": 18, "test": 20, "trait": [5, 7], "tupl": 8, "write": [21, 22]}})